{"version":3,"sources":["components/Card.jsx","screens/Carousels.jsx","screens/Grids.jsx","screens/Help.jsx","mock.js","screens/App.jsx","index.jsx"],"names":["A","styled","a","Title","div","Subtitle","Card","title","subtitle","onClick","props","href","e","preventDefault","Container","InfoContainer","PreviewColor","p","color","CarouselContainer","Carousels","data","setColor","useState","selected","setSelected","vertical","data-en-default","map","sub","i","key","obj","j","onFocus","GridContainer","SearchContainer","Empty","h1","Grids","search","setSearch","result","concat","filter","indexOf","data-en-vertical","data-en-item","onChange","target","value","placeholder","data-en-active","length","Help","mock","sublist","maxJ","list","maxI","parseInt","Math","random","push","toString","substr","GlobalStyle","createGlobalStyle","background","Menu","MenuItem","active","screens","screen","App","setScreen","Screen","data-en-horizontal","ReactDOM","render","document","getElementById","initElementsNavigation"],"mappings":"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","file":"static/js/main.88829671.chunk.js","sourcesContent":["import React from 'react';\r\nimport { string, func } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst A = styled.a`\r\n\twidth: 16rem;\r\n\tmargin: .4rem;\r\n\tpadding: 2.5rem;\r\n\ttext-align: center;\r\n\ttext-decoration: none;\r\n\toutline: none;\r\n\tbackground: #644973;\r\n\tborder: solid .05rem transparent;\r\n\r\n\t&:focus {\r\n\t\tbackground: #3d2867;\r\n\t\ttransform: scale(1.3);\r\n\t\ttransition: .3s;\r\n\t\tborder-color: #FFF;\r\n\t}\r\n`;\r\n\r\nconst Title = styled.div`\r\n\tfont-size: 2.5rem;\r\n\tmargin-bottom: 2rem;\r\n`;\r\n\r\nconst Subtitle = styled.div`\r\n\tfont-size: 1.5rem;\r\n`;\r\n\r\nconst Card = ({ title, subtitle, onClick, ...props }) => (\r\n\t<A\r\n\t\thref=\"#\"\r\n\t\t{...props}\r\n\t\tonClick={e => e.preventDefault() || (onClick && onClick(e))}\r\n\t>\r\n\t\t<Title>{title}</Title>\r\n\t\t<Subtitle>{subtitle}</Subtitle>\r\n\t</A>\r\n);\r\n\r\nCard.propTypes = {\r\n\ttitle: string.isRequired,\r\n\tsubtitle: string,\r\n\tonClick: func\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { arrayOf, shape, string, func } from 'prop-types';\r\nimport { Carousel } from 'elements-navigation/react';\r\nimport Card from '../components/Card';\r\n\r\nconst Container = styled.div`\r\n\twidth: 100%;\r\n\r\n\th1, h2 {\r\n\t\tfont-size: 2rem;\r\n\t\tpadding: 3rem .4rem 2rem .4rem;\r\n\t\ttext-shadow: 0 0 0.5rem #000;\r\n\t}\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n\twidth: 88rem;\r\n\tmargin: 0 5rem 2rem 5rem;\r\n\r\n\th1 {\r\n\t\tfont-size: 3rem;\r\n\t}\r\n`;\r\n\r\nconst PreviewColor = styled.div`\r\n\twidth: 3rem;\r\n\theight: 3rem;\r\n\tmargin-left: 1rem;\r\n\tdisplay: inline-block;\r\n\tvertical-align: middle;\r\n\tborder: solid .05rem #DDD;\r\n\tbackground: ${p => p.color};\r\n`;\r\n\r\nconst CarouselContainer = styled.div`\r\n\theight: 100%;\r\n\tpadding: 0 5rem;\r\n\toverflow: hidden;\r\n\r\n\t& > * {\r\n\t\twidth: 88rem;\r\n\t\theight: 20rem;\r\n\t}\r\n`;\r\n\r\nconst Carousels = ({ data, setColor }) => {\r\n\tconst [selected, setSelected] = useState(data[0][0]);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<InfoContainer>\r\n\t\t\t\t<h1>{selected.title}</h1>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tPreview {selected.color}:\r\n\t\t\t\t\t<PreviewColor color={selected.color} />\r\n\t\t\t\t</h2>\r\n\t\t\t</InfoContainer>\r\n\t\t\t<CarouselContainer>\r\n\t\t\t\t<Carousel vertical data-en-default>\r\n\t\t\t\t\t{data.map((sub, i) => (\r\n\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t<h1>{`Session ${i}`}</h1>\r\n\t\t\t\t\t\t\t<Carousel>\r\n\t\t\t\t\t\t\t\t{sub.map((obj, j) => (\r\n\t\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\t\tkey={j}\r\n\t\t\t\t\t\t\t\t\t\ttitle={obj.title}\r\n\t\t\t\t\t\t\t\t\t\tsubtitle={obj.color}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setColor(obj.color)}\r\n\t\t\t\t\t\t\t\t\t\tonFocus={() => setSelected(obj)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Carousel>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Carousel>\r\n\t\t\t</CarouselContainer>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nCarousels.propTypes = {\r\n\tdata: arrayOf(arrayOf(shape({\r\n\t\ttitle: string.isRequired,\r\n\t\tcolor: string.isRequired\r\n\t}))),\r\n\tsetColor: func.isRequired\r\n};\r\n\r\nexport default Carousels;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { arrayOf, shape, string, func } from 'prop-types';\r\nimport { Grid } from 'elements-navigation/react';\r\nimport Card from '../components/Card';\r\n\r\nconst GridContainer = styled.div`\r\n\theight: 100%;\r\n\tpadding: 2rem 5rem;\r\n\toverflow: hidden;\r\n\r\n\t& > * {\r\n\t\twidth: 88rem;\r\n\t\theight: 38rem;\r\n\t}\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n\twidth: 88rem;\r\n\tmargin: 3rem 5rem 2rem 5rem;\r\n\ttext-align: center;\r\n\r\n\tinput {\r\n\t\twidth: 30rem;\r\n\t\tpadding: 1rem;\r\n\t\tcolor: #666;\r\n\t\tfont-size: 1.5rem;\r\n\t\tborder: solid .2rem #221526;\r\n\t\tbackground: #CCC;\r\n\r\n\t\t&:focus {\r\n\t\t\tbackground: #FFF;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Empty = styled.h1`\r\n\ttext-align: center;\r\n`;\r\n\r\nconst Grids = ({ data, setColor }) => {\r\n\tconst [search, setSearch] = useState('');\r\n\tconst result = [].concat(...data).filter(\r\n\t\te => e.title.indexOf(search) >= 0 || e.color.indexOf(search) >= 0\r\n\t);\r\n\treturn (\r\n\t\t<div data-en-vertical data-en-default>\r\n\t\t\t<SearchContainer>\r\n\t\t\t\t<input\r\n\t\t\t\t\tdata-en-item\r\n\t\t\t\t\tonChange={e => setSearch(e.target.value)}\r\n\t\t\t\t\tplaceholder=\"Search color...\"\r\n\t\t\t\t/>\r\n\t\t\t</SearchContainer>\r\n\t\t\t<GridContainer data-en-active>\r\n\t\t\t\t{result.length ? (\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t{result.map((obj, i) => (\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\ttitle={obj.title}\r\n\t\t\t\t\t\t\t\tsubtitle={obj.color}\r\n\t\t\t\t\t\t\t\tonClick={() => setColor(obj.color)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Empty>Nothing found</Empty>\r\n\t\t\t\t)}\r\n\t\t\t</GridContainer>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nGrids.propTypes = {\r\n\tdata: arrayOf(arrayOf(shape({\r\n\t\ttitle: string.isRequired,\r\n\t\tcolor: string.isRequired\r\n\t}))),\r\n\tsetColor: func.isRequired\r\n};\r\n\r\nexport default Grids;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\tmargin: 3rem 5rem;\r\n\ttext-shadow: 0 0 0.5rem #000;\r\n\r\n\th1 {\r\n\t\tfont-size: 3rem;\r\n\t\tmargin-bottom: 4rem;\r\n\t}\r\n\r\n\tp {\r\n\t\tfont-size: 2rem;\r\n\t\tmargin-bottom: 2rem;\r\n\t}\r\n\r\n\ta {\r\n\t\tcolor: #AAF;\r\n\t\tmargin-left: .5rem;\r\n\t\tpadding: .5rem;\r\n\t\tborder: solid .2rem transparent;\r\n\r\n\t\t&:focus {\r\n\t\t\tborder-color: #FFF;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Help = () => (\r\n\t<Container>\r\n\t\t<h1>Help</h1>\r\n\t\t<p>\r\n\t\t\t1. This demo is not designed to be used with the mouse, so use the directional controls to navigate.<br/>\r\n\t\t\t(use the arrow keys: &#8592; &#8594; &#8593; &#8595;)\r\n\t\t</p>\r\n\t\t<p>2. The data used here is generated randomly during page loading, that is, to test with new data, just update the page.</p>\r\n\t\t<p>\r\n\t\t\t3. For more details about the project, visit:\r\n\t\t\t<a data-en-item data-en-default href=\"https://github.com/ayrtoneverton/elements-navigation\" target=\"_black\">\r\n\t\t\t\thttps://github.com/ayrtoneverton/elements-navigation\r\n\t\t\t</a>.\r\n\t\t</p>\r\n\t</Container>\r\n);\r\n\r\nexport default Help;\r\n","const mock = () => {\r\n\tlet list = [];\r\n\tlet sublist;\r\n\tconst maxI = parseInt(Math.random() * 20) + 1;\r\n\tlet maxJ;\r\n\tfor (let i = 0; i < maxI; ++i) {\r\n\t\tsublist = [];\r\n\t\tmaxJ = parseInt(Math.random() * 20) + 1;\r\n\t\tfor (let j = 0; j < maxJ; ++j) {\r\n\t\t\tsublist.push({\r\n\t\t\t\ttitle: `Color ${i}x${j}`,\r\n\t\t\t\tcolor: `#${((1 << 24) * Math.random() | 0).toString(16)}000000`.substr(0, 7)\r\n\t\t\t});\r\n\t\t}\r\n\t\tlist.push(sublist);\r\n\t}\r\n\treturn list;\r\n};\r\n\r\nexport default mock;\r\n","import React, { useState } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport Carousels from './Carousels';\r\nimport Grids from './Grids';\r\nimport Help from './Help';\r\nimport mock from '../mock';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\t* {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tcolor: #FFF;\r\n\t\toutline: none;\r\n\t\ttext-decoration: none;\r\n\t\tfont-family: sans-serif;\r\n\t}\r\n\r\n\thtml, body, #root, #root > div {\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tfont-size: 10.6px;\r\n\t\toverflow: hidden;\r\n\t\tbackground: ${p => p.background};\r\n\r\n\t\t@media (min-width: 1000px) {\r\n\t\t\tfont-size: 11.383px;\r\n\t\t}\r\n\t\t@media (min-width: 1900px) {\r\n\t\t\tfont-size: 16px;\r\n\t\t}\r\n\t\t@media (min-width: 2500px) {\r\n\t\t\tfont-size: 23px;\r\n\t\t}\r\n\t\t@media (min-width: 3800px) {\r\n\t\t\tfont-size: 31px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Menu = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\tbackground: #2d1834;\r\n\tz-index: 1;\r\n`;\r\n\r\nconst MenuItem = styled.a`\r\n\tpadding: 1rem 2rem;\r\n\tmargin: 1rem;\r\n\tfont-size: 1.5rem;\r\n\ttext-shadow: 0 0 .5rem #000;\r\n\tborder: solid .2rem transparent;\r\n\t${p => p.active && 'background: rgba(0, 0, 0, .4);'}\r\n\r\n\t&:focus {\r\n\t\tborder-color: #FFF;\r\n\t}\r\n`;\r\n\r\nconst data = mock();\r\n\r\nconst screens = [\r\n\t{ title: 'Carousels', screen: Carousels },\r\n\t{ title: 'Grids', screen: Grids },\r\n\t{ title: 'Help', screen: Help }\r\n];\r\n\r\nconst App = () => {\r\n\tconst [color, setColor] = useState('#221526');\r\n\tconst [screen, setScreen] = useState(0);\r\n\tconst Screen = screens[screen].screen;\r\n\treturn (\r\n\t\t<div data-en-horizontal>\r\n\t\t\t<GlobalStyle background={color} />\r\n\t\t\t<Menu data-en-vertical>\r\n\t\t\t\t{screens.map(({ title }, i) => (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t\tactive={screen === i}\r\n\t\t\t\t\t\tonClick={e => e.preventDefault() || setScreen(i)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Menu>\r\n\t\t\t<Screen data={data} setColor={setColor} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './screens/App';\r\nimport initElementsNavigation from 'elements-navigation';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\ninitElementsNavigation();\r\n"],"sourceRoot":""}